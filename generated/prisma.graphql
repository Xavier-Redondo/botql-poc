# THIS FILE HAS BEEN AUTO-GENERATED BY "PRISMA DEPLOY"
# DO NOT EDIT THIS FILE DIRECTLY

#
# Model Types
#

type Bot implements Node {
  id: ID!
  name: String!
  key: String!
  description: String
  defaultLocale: String
  status: String
  owner(where: UserWhereInput): User!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type User implements Node {
  id: ID!
  company: String!
  firstName: String!
  lastName: String!
  username: String!
  email: String!
  bots(where: BotWhereInput, orderBy: BotOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Bot!]
  createdAt: DateTime!
  updatedAt: DateTime!
}


#
# Other Types
#

type AggregateBot {
  count: Int!
}

type AggregateUser {
  count: Int!
}

type BatchPayload {
  """
  The number of nodes that have been affected by the Batch operation.
  """
  count: Long!
}

"""
A connection to a list of items.
"""
type BotConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [BotEdge]!
  aggregate: AggregateBot!
}

input BotCreateInput {
  name: String!
  key: String!
  description: String
  defaultLocale: String
  status: String
  owner: UserCreateOneWithoutBotsInput!
}

input BotCreateManyWithoutOwnerInput {
  create: [BotCreateWithoutOwnerInput!]
  connect: [BotWhereUniqueInput!]
}

input BotCreateWithoutOwnerInput {
  name: String!
  key: String!
  description: String
  defaultLocale: String
  status: String
}

"""
An edge in a connection.
"""
type BotEdge {
  """
  The item at the end of the edge.
  """
  node: Bot!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum BotOrderByInput {
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  key_ASC
  key_DESC
  description_ASC
  description_DESC
  defaultLocale_ASC
  defaultLocale_DESC
  status_ASC
  status_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type BotPreviousValues {
  id: ID!
  name: String!
  key: String!
  description: String
  defaultLocale: String
  status: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type BotSubscriptionPayload {
  mutation: MutationType!
  node: Bot
  updatedFields: [String!]
  previousValues: BotPreviousValues
}

input BotSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [BotSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [BotSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: BotWhereInput
}

input BotUpdateInput {
  name: String
  key: String
  description: String
  defaultLocale: String
  status: String
  owner: UserUpdateOneWithoutBotsInput
}

input BotUpdateManyWithoutOwnerInput {
  create: [BotCreateWithoutOwnerInput!]
  connect: [BotWhereUniqueInput!]
  disconnect: [BotWhereUniqueInput!]
  delete: [BotWhereUniqueInput!]
  update: [BotUpdateWithWhereUniqueWithoutOwnerInput!]
  upsert: [BotUpsertWithWhereUniqueWithoutOwnerInput!]
}

input BotUpdateWithoutOwnerDataInput {
  name: String
  key: String
  description: String
  defaultLocale: String
  status: String
}

input BotUpdateWithWhereUniqueWithoutOwnerInput {
  where: BotWhereUniqueInput!
  data: BotUpdateWithoutOwnerDataInput!
}

input BotUpsertWithWhereUniqueWithoutOwnerInput {
  where: BotWhereUniqueInput!
  update: BotUpdateWithoutOwnerDataInput!
  create: BotCreateWithoutOwnerInput!
}

input BotWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [BotWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [BotWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  name: String
  """
  All values that are not equal to given value.
  """
  name_not: String
  """
  All values that are contained in given list.
  """
  name_in: [String!]
  """
  All values that are not contained in given list.
  """
  name_not_in: [String!]
  """
  All values less than the given value.
  """
  name_lt: String
  """
  All values less than or equal the given value.
  """
  name_lte: String
  """
  All values greater than the given value.
  """
  name_gt: String
  """
  All values greater than or equal the given value.
  """
  name_gte: String
  """
  All values containing the given string.
  """
  name_contains: String
  """
  All values not containing the given string.
  """
  name_not_contains: String
  """
  All values starting with the given string.
  """
  name_starts_with: String
  """
  All values not starting with the given string.
  """
  name_not_starts_with: String
  """
  All values ending with the given string.
  """
  name_ends_with: String
  """
  All values not ending with the given string.
  """
  name_not_ends_with: String
  key: String
  """
  All values that are not equal to given value.
  """
  key_not: String
  """
  All values that are contained in given list.
  """
  key_in: [String!]
  """
  All values that are not contained in given list.
  """
  key_not_in: [String!]
  """
  All values less than the given value.
  """
  key_lt: String
  """
  All values less than or equal the given value.
  """
  key_lte: String
  """
  All values greater than the given value.
  """
  key_gt: String
  """
  All values greater than or equal the given value.
  """
  key_gte: String
  """
  All values containing the given string.
  """
  key_contains: String
  """
  All values not containing the given string.
  """
  key_not_contains: String
  """
  All values starting with the given string.
  """
  key_starts_with: String
  """
  All values not starting with the given string.
  """
  key_not_starts_with: String
  """
  All values ending with the given string.
  """
  key_ends_with: String
  """
  All values not ending with the given string.
  """
  key_not_ends_with: String
  description: String
  """
  All values that are not equal to given value.
  """
  description_not: String
  """
  All values that are contained in given list.
  """
  description_in: [String!]
  """
  All values that are not contained in given list.
  """
  description_not_in: [String!]
  """
  All values less than the given value.
  """
  description_lt: String
  """
  All values less than or equal the given value.
  """
  description_lte: String
  """
  All values greater than the given value.
  """
  description_gt: String
  """
  All values greater than or equal the given value.
  """
  description_gte: String
  """
  All values containing the given string.
  """
  description_contains: String
  """
  All values not containing the given string.
  """
  description_not_contains: String
  """
  All values starting with the given string.
  """
  description_starts_with: String
  """
  All values not starting with the given string.
  """
  description_not_starts_with: String
  """
  All values ending with the given string.
  """
  description_ends_with: String
  """
  All values not ending with the given string.
  """
  description_not_ends_with: String
  defaultLocale: String
  """
  All values that are not equal to given value.
  """
  defaultLocale_not: String
  """
  All values that are contained in given list.
  """
  defaultLocale_in: [String!]
  """
  All values that are not contained in given list.
  """
  defaultLocale_not_in: [String!]
  """
  All values less than the given value.
  """
  defaultLocale_lt: String
  """
  All values less than or equal the given value.
  """
  defaultLocale_lte: String
  """
  All values greater than the given value.
  """
  defaultLocale_gt: String
  """
  All values greater than or equal the given value.
  """
  defaultLocale_gte: String
  """
  All values containing the given string.
  """
  defaultLocale_contains: String
  """
  All values not containing the given string.
  """
  defaultLocale_not_contains: String
  """
  All values starting with the given string.
  """
  defaultLocale_starts_with: String
  """
  All values not starting with the given string.
  """
  defaultLocale_not_starts_with: String
  """
  All values ending with the given string.
  """
  defaultLocale_ends_with: String
  """
  All values not ending with the given string.
  """
  defaultLocale_not_ends_with: String
  status: String
  """
  All values that are not equal to given value.
  """
  status_not: String
  """
  All values that are contained in given list.
  """
  status_in: [String!]
  """
  All values that are not contained in given list.
  """
  status_not_in: [String!]
  """
  All values less than the given value.
  """
  status_lt: String
  """
  All values less than or equal the given value.
  """
  status_lte: String
  """
  All values greater than the given value.
  """
  status_gt: String
  """
  All values greater than or equal the given value.
  """
  status_gte: String
  """
  All values containing the given string.
  """
  status_contains: String
  """
  All values not containing the given string.
  """
  status_not_contains: String
  """
  All values starting with the given string.
  """
  status_starts_with: String
  """
  All values not starting with the given string.
  """
  status_not_starts_with: String
  """
  All values ending with the given string.
  """
  status_ends_with: String
  """
  All values not ending with the given string.
  """
  status_not_ends_with: String
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  owner: UserWhereInput
}

input BotWhereUniqueInput {
  id: ID
  name: String
}

scalar DateTime

"""
The `Long` scalar type represents non-fractional signed whole numeric values.
Long can represent values between -(2^63) and 2^63 - 1.
"""
scalar Long

type Mutation {
  createUser(data: UserCreateInput!): User!
  createBot(data: BotCreateInput!): Bot!
  updateUser(data: UserUpdateInput!, where: UserWhereUniqueInput!): User
  updateBot(data: BotUpdateInput!, where: BotWhereUniqueInput!): Bot
  deleteUser(where: UserWhereUniqueInput!): User
  deleteBot(where: BotWhereUniqueInput!): Bot
  upsertUser(where: UserWhereUniqueInput!, create: UserCreateInput!, update: UserUpdateInput!): User!
  upsertBot(where: BotWhereUniqueInput!, create: BotCreateInput!, update: BotUpdateInput!): Bot!
  updateManyUsers(data: UserUpdateInput!, where: UserWhereInput): BatchPayload!
  updateManyBots(data: BotUpdateInput!, where: BotWhereInput): BatchPayload!
  deleteManyUsers(where: UserWhereInput): BatchPayload!
  deleteManyBots(where: BotWhereInput): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

"""
An object with an ID
"""
interface Node {
  """
  The id of the object.
  """
  id: ID!
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!
  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!
  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String
}

type Query {
  users(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [User]!
  bots(where: BotWhereInput, orderBy: BotOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Bot]!
  user(where: UserWhereUniqueInput!): User
  bot(where: BotWhereUniqueInput!): Bot
  usersConnection(where: UserWhereInput, orderBy: UserOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): UserConnection!
  botsConnection(where: BotWhereInput, orderBy: BotOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): BotConnection!
  """
  Fetches an object given its ID
  """
  node("""
  The ID of an object
  """
  id: ID!): Node
}

type Subscription {
  user(where: UserSubscriptionWhereInput): UserSubscriptionPayload
  bot(where: BotSubscriptionWhereInput): BotSubscriptionPayload
}

"""
A connection to a list of items.
"""
type UserConnection {
  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  """
  A list of edges.
  """
  edges: [UserEdge]!
  aggregate: AggregateUser!
}

input UserCreateInput {
  company: String!
  firstName: String!
  lastName: String!
  username: String!
  email: String!
  bots: BotCreateManyWithoutOwnerInput
}

input UserCreateOneWithoutBotsInput {
  create: UserCreateWithoutBotsInput
  connect: UserWhereUniqueInput
}

input UserCreateWithoutBotsInput {
  company: String!
  firstName: String!
  lastName: String!
  username: String!
  email: String!
}

"""
An edge in a connection.
"""
type UserEdge {
  """
  The item at the end of the edge.
  """
  node: User!
  """
  A cursor for use in pagination.
  """
  cursor: String!
}

enum UserOrderByInput {
  id_ASC
  id_DESC
  company_ASC
  company_DESC
  firstName_ASC
  firstName_DESC
  lastName_ASC
  lastName_DESC
  username_ASC
  username_DESC
  email_ASC
  email_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
}

type UserPreviousValues {
  id: ID!
  company: String!
  firstName: String!
  lastName: String!
  username: String!
  email: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

type UserSubscriptionPayload {
  mutation: MutationType!
  node: User
  updatedFields: [String!]
  previousValues: UserPreviousValues
}

input UserSubscriptionWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserSubscriptionWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [UserSubscriptionWhereInput!]
  """
  The subscription event gets dispatched when it's listed in mutation_in
  """
  mutation_in: [MutationType!]
  """
  The subscription event gets only dispatched when one of the updated fields names is included in this list
  """
  updatedFields_contains: String
  """
  The subscription event gets only dispatched when all of the field names included in this list have been updated
  """
  updatedFields_contains_every: [String!]
  """
  The subscription event gets only dispatched when some of the field names included in this list have been updated
  """
  updatedFields_contains_some: [String!]
  node: UserWhereInput
}

input UserUpdateInput {
  company: String
  firstName: String
  lastName: String
  username: String
  email: String
  bots: BotUpdateManyWithoutOwnerInput
}

input UserUpdateOneWithoutBotsInput {
  create: UserCreateWithoutBotsInput
  connect: UserWhereUniqueInput
  delete: Boolean
  update: UserUpdateWithoutBotsDataInput
  upsert: UserUpsertWithoutBotsInput
}

input UserUpdateWithoutBotsDataInput {
  company: String
  firstName: String
  lastName: String
  username: String
  email: String
}

input UserUpsertWithoutBotsInput {
  update: UserUpdateWithoutBotsDataInput!
  create: UserCreateWithoutBotsInput!
}

input UserWhereInput {
  """
  Logical AND on all given filters.
  """
  AND: [UserWhereInput!]
  """
  Logical OR on all given filters.
  """
  OR: [UserWhereInput!]
  id: ID
  """
  All values that are not equal to given value.
  """
  id_not: ID
  """
  All values that are contained in given list.
  """
  id_in: [ID!]
  """
  All values that are not contained in given list.
  """
  id_not_in: [ID!]
  """
  All values less than the given value.
  """
  id_lt: ID
  """
  All values less than or equal the given value.
  """
  id_lte: ID
  """
  All values greater than the given value.
  """
  id_gt: ID
  """
  All values greater than or equal the given value.
  """
  id_gte: ID
  """
  All values containing the given string.
  """
  id_contains: ID
  """
  All values not containing the given string.
  """
  id_not_contains: ID
  """
  All values starting with the given string.
  """
  id_starts_with: ID
  """
  All values not starting with the given string.
  """
  id_not_starts_with: ID
  """
  All values ending with the given string.
  """
  id_ends_with: ID
  """
  All values not ending with the given string.
  """
  id_not_ends_with: ID
  company: String
  """
  All values that are not equal to given value.
  """
  company_not: String
  """
  All values that are contained in given list.
  """
  company_in: [String!]
  """
  All values that are not contained in given list.
  """
  company_not_in: [String!]
  """
  All values less than the given value.
  """
  company_lt: String
  """
  All values less than or equal the given value.
  """
  company_lte: String
  """
  All values greater than the given value.
  """
  company_gt: String
  """
  All values greater than or equal the given value.
  """
  company_gte: String
  """
  All values containing the given string.
  """
  company_contains: String
  """
  All values not containing the given string.
  """
  company_not_contains: String
  """
  All values starting with the given string.
  """
  company_starts_with: String
  """
  All values not starting with the given string.
  """
  company_not_starts_with: String
  """
  All values ending with the given string.
  """
  company_ends_with: String
  """
  All values not ending with the given string.
  """
  company_not_ends_with: String
  firstName: String
  """
  All values that are not equal to given value.
  """
  firstName_not: String
  """
  All values that are contained in given list.
  """
  firstName_in: [String!]
  """
  All values that are not contained in given list.
  """
  firstName_not_in: [String!]
  """
  All values less than the given value.
  """
  firstName_lt: String
  """
  All values less than or equal the given value.
  """
  firstName_lte: String
  """
  All values greater than the given value.
  """
  firstName_gt: String
  """
  All values greater than or equal the given value.
  """
  firstName_gte: String
  """
  All values containing the given string.
  """
  firstName_contains: String
  """
  All values not containing the given string.
  """
  firstName_not_contains: String
  """
  All values starting with the given string.
  """
  firstName_starts_with: String
  """
  All values not starting with the given string.
  """
  firstName_not_starts_with: String
  """
  All values ending with the given string.
  """
  firstName_ends_with: String
  """
  All values not ending with the given string.
  """
  firstName_not_ends_with: String
  lastName: String
  """
  All values that are not equal to given value.
  """
  lastName_not: String
  """
  All values that are contained in given list.
  """
  lastName_in: [String!]
  """
  All values that are not contained in given list.
  """
  lastName_not_in: [String!]
  """
  All values less than the given value.
  """
  lastName_lt: String
  """
  All values less than or equal the given value.
  """
  lastName_lte: String
  """
  All values greater than the given value.
  """
  lastName_gt: String
  """
  All values greater than or equal the given value.
  """
  lastName_gte: String
  """
  All values containing the given string.
  """
  lastName_contains: String
  """
  All values not containing the given string.
  """
  lastName_not_contains: String
  """
  All values starting with the given string.
  """
  lastName_starts_with: String
  """
  All values not starting with the given string.
  """
  lastName_not_starts_with: String
  """
  All values ending with the given string.
  """
  lastName_ends_with: String
  """
  All values not ending with the given string.
  """
  lastName_not_ends_with: String
  username: String
  """
  All values that are not equal to given value.
  """
  username_not: String
  """
  All values that are contained in given list.
  """
  username_in: [String!]
  """
  All values that are not contained in given list.
  """
  username_not_in: [String!]
  """
  All values less than the given value.
  """
  username_lt: String
  """
  All values less than or equal the given value.
  """
  username_lte: String
  """
  All values greater than the given value.
  """
  username_gt: String
  """
  All values greater than or equal the given value.
  """
  username_gte: String
  """
  All values containing the given string.
  """
  username_contains: String
  """
  All values not containing the given string.
  """
  username_not_contains: String
  """
  All values starting with the given string.
  """
  username_starts_with: String
  """
  All values not starting with the given string.
  """
  username_not_starts_with: String
  """
  All values ending with the given string.
  """
  username_ends_with: String
  """
  All values not ending with the given string.
  """
  username_not_ends_with: String
  email: String
  """
  All values that are not equal to given value.
  """
  email_not: String
  """
  All values that are contained in given list.
  """
  email_in: [String!]
  """
  All values that are not contained in given list.
  """
  email_not_in: [String!]
  """
  All values less than the given value.
  """
  email_lt: String
  """
  All values less than or equal the given value.
  """
  email_lte: String
  """
  All values greater than the given value.
  """
  email_gt: String
  """
  All values greater than or equal the given value.
  """
  email_gte: String
  """
  All values containing the given string.
  """
  email_contains: String
  """
  All values not containing the given string.
  """
  email_not_contains: String
  """
  All values starting with the given string.
  """
  email_starts_with: String
  """
  All values not starting with the given string.
  """
  email_not_starts_with: String
  """
  All values ending with the given string.
  """
  email_ends_with: String
  """
  All values not ending with the given string.
  """
  email_not_ends_with: String
  createdAt: DateTime
  """
  All values that are not equal to given value.
  """
  createdAt_not: DateTime
  """
  All values that are contained in given list.
  """
  createdAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  createdAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  createdAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  createdAt_lte: DateTime
  """
  All values greater than the given value.
  """
  createdAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  createdAt_gte: DateTime
  updatedAt: DateTime
  """
  All values that are not equal to given value.
  """
  updatedAt_not: DateTime
  """
  All values that are contained in given list.
  """
  updatedAt_in: [DateTime!]
  """
  All values that are not contained in given list.
  """
  updatedAt_not_in: [DateTime!]
  """
  All values less than the given value.
  """
  updatedAt_lt: DateTime
  """
  All values less than or equal the given value.
  """
  updatedAt_lte: DateTime
  """
  All values greater than the given value.
  """
  updatedAt_gt: DateTime
  """
  All values greater than or equal the given value.
  """
  updatedAt_gte: DateTime
  bots_every: BotWhereInput
  bots_some: BotWhereInput
  bots_none: BotWhereInput
}

input UserWhereUniqueInput {
  id: ID
  username: String
  email: String
}
